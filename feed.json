[


  
    
    {
      "title": "My Running Journey So Far",
      "permalink": "http://0.0.0.0:4321/my-running-journey.html",
      "link": "http://0.0.0.0:4321/my-running-journey.html",
      "date": "2023-10-02T00:00:00+00:00",
      
        "modified": "2023-10-08T14:21:56+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Theme Curtana has full <a href=\"http://ogp.me/\">Open Graph</a> and <a href=\"https://dev.twitter.com/docs/cards\">Twitter Cards</a> support.</p>\n\n<p>It will look for the image in the following order:</p>\n\n<ol>\n  <li>Use <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> if defined in your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>.</li>\n  <li>If no specified <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> defined, it uses <a href=\"/custom-heading-background.html\">Heading Background Image</a> (aka. <code class=\"language-plaintext highlighter-rouge\">page.heading-bg</code>) if defined in your post front-matter field.</li>\n  <li>If no heading background image found, Curtana will try to grab the first image (wrapped inside <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>) in your post as your post thumbnail</li>\n  <li>If nothing found, it fails back to <code class=\"language-plaintext highlighter-rouge\">logo.png</code> located at your site root.</li>\n</ol>\n\n<p>You can always use <code class=\"language-plaintext highlighter-rouge\">page.thumb_force_logo</code> in your post front-matter field to override the above lookup.</p>\n\n<p>Here’s a preview on Twitter:</p>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/open-graph-preview.png\" alt=\"Twitter Cards (Open Graph compatible) Preview\" /></p>",
      "excerpt": "Theme Curtana has full Open Graph and Twitter Cards support.",
      "languages": null,
      "categories": ["note"],
      "tags": ["running"]
    }
    
  

  
    ,
    {
      "title": "East Yorkshire",
      "permalink": "http://0.0.0.0:4321/east-yorkshire.html",
      "link": "http://0.0.0.0:4321/east-yorkshire.html",
      "date": "2023-10-02T00:00:00+00:00",
      
        "modified": "2023-10-08T14:21:56+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Theme Curtana has full <a href=\"http://ogp.me/\">Open Graph</a> and <a href=\"https://dev.twitter.com/docs/cards\">Twitter Cards</a> support.</p>\n\n<p>It will look for the image in the following order:</p>\n\n<ol>\n  <li>Use <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> if defined in your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>.</li>\n  <li>If no specified <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> defined, it uses <a href=\"/custom-heading-background.html\">Heading Background Image</a> (aka. <code class=\"language-plaintext highlighter-rouge\">page.heading-bg</code>) if defined in your post front-matter field.</li>\n  <li>If no heading background image found, Curtana will try to grab the first image (wrapped inside <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>) in your post as your post thumbnail</li>\n  <li>If nothing found, it fails back to <code class=\"language-plaintext highlighter-rouge\">logo.png</code> located at your site root.</li>\n</ol>\n\n<p>You can always use <code class=\"language-plaintext highlighter-rouge\">page.thumb_force_logo</code> in your post front-matter field to override the above lookup.</p>\n\n<p>Here’s a preview on Twitter:</p>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/open-graph-preview.png\" alt=\"Twitter Cards (Open Graph compatible) Preview\" /></p>",
      "excerpt": "Theme Curtana has full Open Graph and Twitter Cards support.",
      "languages": null,
      "categories": ["note"],
      "tags": ["travel"]
    }
    
  

  
    ,
    {
      "title": "Profiling Rails Applications With Flame Graphs",
      "permalink": "http://0.0.0.0:4321/profiling-rails-applications-with-flame-graphs.html",
      "link": "http://0.0.0.0:4321/profiling-rails-applications-with-flame-graphs.html",
      "date": "2023-01-14T00:00:00+00:00",
      
        "modified": "2023-10-07T22:46:06+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "",
      "excerpt": "",
      "languages": null,
      "categories": ["blog"],
      "tags": ["rails"]
    }
    
  

  
    ,
    {
      "title": "Rolling deployments and fingerprintng",
      "permalink": "http://0.0.0.0:4321/rolling-deployments-and-fingerprinting.html",
      "link": "http://0.0.0.0:4321/rolling-deployments-and-fingerprinting.html",
      "date": "2020-07-25T00:00:00+00:00",
      
        "modified": "2023-10-07T22:46:06+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p class=\"google-search-question\">\n  <img class=\"need-a-pink-border\" src=\"/assets/img/rails-assets-not-loading.png\" />\n</p>\n\n<p>There must be a time in every Rails developer’s life where they had to search the above question.</p>\n\n<p>The dreaded <a href=\"https://guides.rubyonrails.org/asset_pipeline.html\">Rails Asset Pipeline</a> is perhaps one of the most confusing features in Rails, especially if one deviates from its traditional usage. In this post, I describe one of the reasons why your assets might not be loading in production, despite working fine in all your pre-production environments.</p>\n\n<h2 id=\"the-error\">The Error</h2>\n\n<p>I had faced this issue in on one of my recent production deployments. As soon as I deployed my <a href=\"https://martinfowler.com/bliki/CanaryRelease.html\">Canary</a> pod in production, I began receiving the following error for some requests to fetch the <code class=\"language-plaintext highlighter-rouge\">CSS</code> and <code class=\"language-plaintext highlighter-rouge\">JS</code> files.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>500 : Internal Server Error \nNo route matches [GET] /assets.\n</code></pre></div></div>\n\n<p>Seeing the error rate increase I immediately rollbacked, which stopped the errors. When I began tracing the logs, I was shocked to find that the errors were not just happening in the <code class=\"language-plaintext highlighter-rouge\">Canary</code> pods, but all other production pods also. I was shocked because I had not delpoyed the other production pods with the new code yet.</p>\n\n<h2 id=\"how-my-deployments-were-configured\">How my deployments were configured</h2>\n\n<p>MMMy service was fronted by an <a href=\"https://www.envoyproxy.io/\">Envoy Proxy</a> which redirected user requests to one of four pods. We used <a href=\"https://opensource.com/article/17/5/colorful-deployments\">rolling deployments</a> to deploy new code into production. A <code class=\"language-plaintext highlighter-rouge\">Canary</code> is first deployed followed by the other production pods.</p>\n\n<p class=\"google-search-question\">\n  <img src=\"/assets/img/canary-deployed.jpg\" />\n</p>\n\n<h2 id=\"the-cause\">The Cause</h2>\n\n<p>After careful analysis of the error logs, I found out that this issue was not a Rails issue but an issue of how our deployments were configured.</p>\n\n<p>Let’s say before my recent deployment, I had two asset files <code class=\"language-plaintext highlighter-rouge\">common.css</code> and <code class=\"language-plaintext highlighter-rouge\">common.js</code>. Since the default behaviour of Rails Asset Pipeline is to minify and <a href=\"https://guides.rubyonrails.org/asset_pipeline.html#what-is-fingerprinting-and-why-should-i-care-questionmark\">fingerprint</a> the asset files (as it should), the filenames are modified to the following :</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>common-489839434903.css\ncommon-819894348394.js\n</code></pre></div></div>\n\n<h2 id=\"fingerprinting-asset-files\">Fingerprinting Asset Files</h2>\n\n<p>The fingerprint suffix in the filename is a hash of the contents of the file. It changes whenever the contents of the file is updated. This behaviour optimizes the load time of the web page, as the browser does not request the asset file, if the file with this name is already cached in the browser.</p>\n\n<h2 id=\"assets-and-html-fetched-from-different-servers\">Assets and HTML fetched from different servers</h2>\n\n<p>When a user sent a request to the backend to load a page, the <code class=\"language-plaintext highlighter-rouge\">HTML</code> was served by one of the following servers : –</p>\n\n<ol>\n  <li><strong>Either</strong> the - Newly deployed canary</li>\n  <li><strong>Or</strong> - Any one of the remaining production servers</li>\n</ol>\n\n<p><em>Our problem arose because -  it is not necessary that the server which serves the HTML will also serve the asset files requested by the HTML.</em></p>\n\n<p>So if the initial request to load the <code class=\"language-plaintext highlighter-rouge\">HTML</code> page went to the canary pod, it will respond with an HTML containing new asset files. Consequently, the request to fetch these asset files could have reached a pod with an older deployment. If so, the pod would not be able to find the new asset files. Rails being unable to find the required asset file will then forward the request to the controller which will eventually lead to <code class=\"language-plaintext highlighter-rouge\">No route matches [GET] /assets</code> error.</p>\n\n<p>The vice-versa is also true, i.e. initial <code class=\"language-plaintext highlighter-rouge\">HTML</code> being loaded by the pods having the older deployment, and the request to fetch the assets mentioned in the HTML going to the newly deployed <code class=\"language-plaintext highlighter-rouge\">Canary</code> pod.</p>\n\n<p>This was the reason why, on just deploying the <code class=\"language-plaintext highlighter-rouge\">Canary</code> pod, I started receving errors in all pods.</p>\n\n<h2 id=\"the-fix\">The Fix</h2>\n<p>As an immediate fix, I removed asset fingerprinting.</p>\n\n<p>In my use case, I was only dealing with two asset files. Moreover, my asset files were going to be rapidly changing. Thus, I did not see the benifits of fingerprinting in the short term future.</p>\n\n<p>For the long term, I may plan on introducing an <code class=\"language-plaintext highlighter-rouge\">NGINX</code> layer which will be responsible for caching and serving all my assets.</p>",
      "excerpt": "",
      "languages": null,
      "categories": ["blog"],
      "tags": ["deployment"]
    }
    
  

  
    ,
    {
      "title": "Welcome",
      "permalink": "http://0.0.0.0:4321/welcome.html",
      "link": "http://0.0.0.0:4321/welcome.html",
      "date": "2019-12-04T00:00:00+00:00",
      
        "modified": "2023-10-07T22:46:06+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<blockquote>\n  <p>This plugin is no longer maintained.</p>\n</blockquote>\n\n<p>Slimpack — Lightweight Jetpack. Super-fast performance without modules that require contracting WordPress.com.</p>\n\n<p>It provides better performance than original Jetpack. All features that require a WordPress.com account or need contracting / syncing back to WordPress.com servers have been removed. You don’t need to connect to WordPress.com to use this plugin. If your site got slow response time (TTFB) after activating the original Jetpack, you should definitely try out this plugin.</p>\n\n<h3 id=\"features\">Features</h3>\n\n<ul>\n  <li>Transfer from Jetpack to Slimpack seamlessly, just deactivate Jetpack and activate Slimpack, all settings and module status will be kept and work just like before.</li>\n  <li>All source code is untouched and synced from Jetpack</li>\n  <li>Better performance than original Jetpack. All features that require a WordPress.com account have been removed. You don’t need to connect to WordPress.com to use this plugin.</li>\n  <li>Multilingual support (and languages have already bundled in Slimpack!)</li>\n</ul>\n\n<p class=\"download\"><a href=\"https://wordpress.org/plugins/slimpack/\">Download</a> it at WordPress.org</p>\n\n<p>Love this plugin? please consider <a href=\"/donate/\">buying me a cup of coffee</a>.</p>",
      "excerpt": "Slimpack — Lightweight Jetpack. Super-fast performance without modules that require contracting WordPress.com.",
      "languages": null,
      "categories": [],
      "tags": ["deployment"]
    }
    
  

  
    ,
    {
      "title": "Sidekiq Async Task",
      "permalink": "http://0.0.0.0:4321/sidekiqasynctask.html",
      "link": "http://0.0.0.0:4321/sidekiqasynctask.html",
      "date": "2019-04-12T00:00:00+00:00",
      
        "modified": "2023-10-07T22:46:06+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<!-- Place this tag in your head or just before your close body tag. -->\n<script async=\"\" defer=\"\" src=\"https://buttons.github.io/buttons.js\"></script>\n\n<h2 id=\"the-problem\">The Problem</h2>\n\n<p>Ever encountered a situation like this in production?</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span><span class=\"p\">.</span><span class=\"nf\">transaction</span> <span class=\"k\">do</span>\n  <span class=\"n\">user_one</span><span class=\"p\">.</span><span class=\"nf\">process_action_one</span>\n  <span class=\"n\">user_two</span><span class=\"p\">.</span><span class=\"nf\">process_action_two</span>\n  <span class=\"no\">MailWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_async</span><span class=\"p\">(</span><span class=\"s2\">\"UserMailer\"</span><span class=\"p\">,</span> <span class=\"s2\">\"success_mail\"</span><span class=\"p\">,</span> <span class=\"n\">user_one</span><span class=\"p\">.</span><span class=\"nf\">id</span><span class=\"p\">)</span>\n  <span class=\"no\">MailWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_async</span><span class=\"p\">(</span><span class=\"s2\">\"UserMailer\"</span><span class=\"p\">,</span> <span class=\"s2\">\"success_mail\"</span><span class=\"p\">,</span> <span class=\"n\">user_two</span><span class=\"p\">.</span><span class=\"nf\">id</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n<p>Where we have to process a group of actions within a transaction, and on success send mails to users.\nWe use asycronous jobs to send our mails, as it can be blocking if done otherwise.</p>\n\n<p>Everything seems fine and simple, but what happens if during the function calls, an error is raised and the transaction which encapsulates these lines of code is rolled back?</p>\n\n<p>Since the jobs are already scheduled to run asyncronously, they will be processed regardless of the success or failure of the transaction. This can cause a problem, because the users could receive an erroneous notification if the transaction had rolled back and the intended code not executed.</p>\n\n<p>We thus require, a solution which only schedules asyncronous jobs called within a transaction, <strong>to be processed once the encapsulating transaction commits</strong>.</p>\n\n<h2 id=\"the-solution\">The Solution</h2>\n\n<p><a href=\"https://rubygems.org/gems/sidekiq_async_task\">Sidekiq Async Task</a> solves exactly this problem.\nThis is a <strong>ruby gem</strong> which gives your <strong>Sidekiq</strong> background workers the feature to be <em>transaction-safe</em>. That is, it guarentees that the asyncronous sidekiq jobs within a transaction will only be executed once the transaction commits.</p>\n\n<h2 id=\"the-usage\">The Usage</h2>\n\n<ul>\n  <li><strong>Install the gem</strong>, run the gem generators and migrate your database. (This gem adds a model in your database which keeps track of what asyncronous task to execute when).\n    <div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>gem sidekiq_async_task <span class=\"c\">#Add to gemspec</span>\n<span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span>\n<span class=\"nv\">$ </span>rails generate sidekiq_async_task:install\n<span class=\"nv\">$ </span>rake db:migrate\n</code></pre></div>    </div>\n  </li>\n  <li><strong>Inherit</strong> <code class=\"language-plaintext highlighter-rouge\">SidekiqAsyncTask::TransactionSupport</code> to your <em>Sidekiq</em> worker.</li>\n</ul>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">MailWorker</span> <span class=\"o\">&lt;</span> <span class=\"no\">SidekiqAsyncTask</span><span class=\"o\">::</span><span class=\"no\">TransactionSupport</span>\n  <span class=\"kp\">include</span> <span class=\"no\">Sidekiq</span><span class=\"o\">::</span><span class=\"no\">Worker</span>\n  <span class=\"n\">sidekiq_options</span> <span class=\"ss\">retry: </span><span class=\"kp\">true</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">perform_with_callback</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"c1\">#Logic for sending mail</span>\n  <span class=\"k\">end</span>\n\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<ul>\n  <li>\n    <p><strong>Define</strong> your worker logic in the <code class=\"language-plaintext highlighter-rouge\">perform_with_callback</code> method instead of the generic <code class=\"language-plaintext highlighter-rouge\">perform</code> method, in the worker class.</p>\n  </li>\n  <li>\n    <p><strong>Schedule</strong> your asyncronous tasks using any of these interfaces.</p>\n  </li>\n</ul>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">HardWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_with_transaction_in</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"nf\">second</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"no\">HardWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_with_transaction_at</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"no\">HardWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_with_transaction_async</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n<span class=\"no\">HardWorker</span><span class=\"p\">.</span><span class=\"nf\">perform_with_transaction_future</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<ul>\n  <li><strong>Enjoy</strong> safe transactional asyncronous tasks in rails!</li>\n</ul>\n\n<h2 id=\"the-working\">The Working</h2>\n\n<p>Everytime we ask Sidekiq to run a worker asyncronously, the gem <strong>creates an entry in the AsyncTask table in the database</strong>. When the transaction commits, the AsyncTask entry also commits. The gem defines logic in the <strong>after_commit callback</strong> of the AsyncTask model to process the job corresponding to the AsyncTask entry.</p>\n\n<p>We can also create an <a href=\"https://activeadmin.info/\">active_admin</a> dashboard for this model to have a UI to view all the scheduled and processed AsyncTasks in our database.</p>",
      "excerpt": "The Problem\n\nEver encountered a situation like this in production?",
      "languages": null,
      "categories": ["note"],
      "tags": ["project"]
    }
    
  

  
    ,
    {
      "title": "Open Graph",
      "permalink": "http://0.0.0.0:4321/open-graph.html",
      "link": "http://0.0.0.0:4321/open-graph.html",
      "date": "2017-01-06T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Theme Curtana has full <a href=\"http://ogp.me/\">Open Graph</a> and <a href=\"https://dev.twitter.com/docs/cards\">Twitter Cards</a> support.</p>\n\n<p>It will look for the image in the following order:</p>\n\n<ol>\n  <li>Use <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> if defined in your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>.</li>\n  <li>If no specified <code class=\"language-plaintext highlighter-rouge\">page.thumbnail</code> defined, it uses <a href=\"/custom-heading-background.html\">Heading Background Image</a> (aka. <code class=\"language-plaintext highlighter-rouge\">page.heading-bg</code>) if defined in your post front-matter field.</li>\n  <li>If no heading background image found, Curtana will try to grab the first image (wrapped inside <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>) in your post as your post thumbnail</li>\n  <li>If nothing found, it fails back to <code class=\"language-plaintext highlighter-rouge\">logo.png</code> located at your site root.</li>\n</ol>\n\n<p>You can always use <code class=\"language-plaintext highlighter-rouge\">page.thumb_force_logo</code> in your post front-matter field to override the above lookup.</p>\n\n<p>Here’s a preview on Twitter:</p>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/open-graph-preview.png\" alt=\"Twitter Cards (Open Graph compatible) Preview\" /></p>",
      "excerpt": "Theme Curtana has full Open Graph and Twitter Cards support.",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Introducing Curtana",
      "permalink": "http://0.0.0.0:4321/theme-curtana.html",
      "link": "http://0.0.0.0:4321/theme-curtana.html",
      "date": "2016-06-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Curtana is the default theme of <a href=\"https://sparanoid.com/lab/amsf/\">AMSF</a> (Almace Scaffolding).</p>\n\n<h3 id=\"features\">Features</h3>\n\n<ul>\n  <li>A variant of <a href=\"https://sparanoid.com/\">sparanoid.com</a>, looking great on any modern browsers</li>\n  <li>Minimalism design, No jQuery, no <code class=\"language-plaintext highlighter-rouge\">everybody-shake-ur-body.js</code></li>\n  <li>Ideal for personal blog, portfolio, product blog and Tumblr-like link blog</li>\n  <li>(Maybe) <a href=\"https://github.com/sparanoid/sparanoid.com/commit/9b44b4c0f57c3dd1e828d828a95cc21b992785ce\">the first</a> template that uses <a href=\"https://www.w3.org/TR/css3-values/#viewport-relative-lengths\">viewport relative units</a></li>\n  <li>Handcrafted stylesheets. No Bootstrap or other bloated frameworks are used, unminified CSS &lt; 12 KB</li>\n  <li>Predefined CSS and Sass (SCSS) variables make it easier to change color schemes for posts</li>\n  <li>Dynamic color scheme for code highlighters powered by <a href=\"https://sparanoid.com/lab/randomized/\">Randomized</a></li>\n  <li><a href=\"http://ogp.me/\">Open Graph</a> and <a href=\"https://dev.twitter.com/docs/cards\">Twitter Cards</a> support</li>\n  <li>No Internet Explorer support</li>\n</ul>",
      "excerpt": "Curtana is the default theme of AMSF (Almace Scaffolding).",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  

  
    ,
    {
      "title": "KARRUN",
      "permalink": "http://0.0.0.0:4321/getting-started.html",
      "link": "http://0.0.0.0:4321/getting-started.html",
      "date": "2014-06-12T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"requirements\">Requirements</h2>\n\n<p>Almace Scaffolding has exactly the same requirements as Jekyll. For more info please refer to <a href=\"https://jekyllrb.com/docs/installation/\">Installation - Jekyll</a>.</p>\n\n<h2 id=\"quick-start\">Quick Start</h2>\n\n<ol>\n  <li><a href=\"https://github.com/sparanoid/almace-scaffolding/fork\">Fork</a> or clone the repo.</li>\n  <li>Install dependencies with Ruby gem <a href=\"https://bundler.io/\"><code class=\"language-plaintext highlighter-rouge\">bundler</code></a> and Node.js package manager <a href=\"https://www.npmjs.org/\"><code class=\"language-plaintext highlighter-rouge\">npm</code></a>.</li>\n  <li>Run <code class=\"language-plaintext highlighter-rouge\">grunt init</code> to initialize your project.</li>\n  <li>Run <code class=\"language-plaintext highlighter-rouge\">grunt serve</code> to fire up a local server.</li>\n  <li>Edit and customize your site.</li>\n  <li>Change Git remote to your own repo.</li>\n  <li>Push and deploy.</li>\n</ol>\n\n<p>So in short for geeks:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>git clone https://github.com/sparanoid/almace-scaffolding my-site\n<span class=\"nv\">$ </span><span class=\"nb\">cd </span>my-site\n<span class=\"nv\">$ </span>bundle <span class=\"nb\">install</span> <span class=\"o\">&amp;&amp;</span> yarn <span class=\"nb\">install</span>\n<span class=\"nv\">$ </span>grunt init\n<span class=\"nv\">$ </span>grunt serve\n<span class=\"c\"># ...editing</span>\n<span class=\"nv\">$ </span>git remote set-url origin https://github.com/sparanoid/my-site.git\n<span class=\"nv\">$ </span>git push <span class=\"nt\">-u</span> origin master\n<span class=\"c\"># ...publishing</span>\n<span class=\"nv\">$ </span>grunt <span class=\"o\">&amp;&amp;</span> grunt deploy:rsync <span class=\"nt\">--env</span><span class=\"o\">=</span>prod\n</code></pre></div></div>\n\n<h2 id=\"download\">Download</h2>\n\n<p>Go to the <a href=\"https://github.com/sparanoid/almace-scaffolding\">GitHub repository</a> for downloads, bug reports, and feature requests.</p>\n\n<h2 id=\"transfer-from-jekyll\">Transfer from Jekyll</h2>\n\n<p>You can simply copy all posts from your old Jekyll setup into <code class=\"language-plaintext highlighter-rouge\">_app/_posts</code>, you can also transfer your custom pages into <code class=\"language-plaintext highlighter-rouge\">_app/_pages/</code>.</p>\n\n<h2 id=\"upgrading\">Upgrading</h2>\n\n<p>It will be easy if you’re a casual blogger and keep every core and template file untouched. You can use the following command to update Almace Scaffolding core files:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>\n\n<p>It checks the latest Almace Scaffolding build from GitHub and update core files automatically. Please keep in mind that if you changed some of the AMSF core files this action will <strong>override</strong> the changes you made. So it’s recommended to keep your project under version control, you will be always be able to compare changes for Almace Scaffolding.</p>\n\n<h2 id=\"using-beta-release\">Using Beta Release</h2>\n\n<p>By default, when you run <code class=\"language-plaintext highlighter-rouge\">amsf-update</code> you will get updated files from <code class=\"language-plaintext highlighter-rouge\">release</code> branch. However, I’m continuously working on Almace Scaffolding, so there may have testing branches you can try and give me feedback if you’re interested. You can check the AMSF GitHub repository for available branches, and it’s very easy to switch:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>feat/service-worker\n</code></pre></div></div>\n\n<p>The branch <code class=\"language-plaintext highlighter-rouge\">master</code> is the one which is always available to checkout and also has the latest changes:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update <span class=\"nt\">--branch</span><span class=\"o\">=</span>master\n</code></pre></div></div>\n\n<p>If you messed up with the testing branch, don’t worry, you can just run a normal update to revert them back:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt amsf-update\n</code></pre></div></div>",
      "excerpt": "Requirements",
      "languages": null,
      "categories": ["note"],
      "tags": ["getting-started"]
    }
    
  

  
    ,
    {
      "title": "Customizing Styles",
      "permalink": "http://0.0.0.0:4321/customizing-styles.html",
      "link": "http://0.0.0.0:4321/customizing-styles.html",
      "date": "2014-06-11T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>You can customize the basic look and feel without touching the theme files by changing <code class=\"language-plaintext highlighter-rouge\">user.js</code> and <code class=\"language-plaintext highlighter-rouge\">user.scss</code>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── assets/\n|   |   └── _js/\n|   |   |   └── user.js\n|   |   └── _scss/\n|   |   |   └── user.scss\n|   |   └── themes/\n|   |   |   └── ...\n</code></pre></div></div>\n\n<p>These files won’t be overwritten when you update Almace Scaffolding or update your themes.</p>",
      "excerpt": "You can customize the basic look and feel without touching the theme files by changing user.js and user.scss:",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Configuration",
      "permalink": "http://0.0.0.0:4321/configuration.html",
      "link": "http://0.0.0.0:4321/configuration.html",
      "date": "2014-06-11T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"configuration-settings\">Configuration Settings</h2>\n\n<ul>\n  <li>All AMSF built-in settings can be configured at <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_config.yml\"><code class=\"language-plaintext highlighter-rouge\">_config.yml</code></a>.</li>\n  <li>Theme specific variables can be found at <code class=\"language-plaintext highlighter-rouge\">./_app/_data/theme-name.yml</code>.</li>\n  <li>Additional variables are stored in <a href=\"https://github.com/sparanoid/almace-scaffolding/blob/master/_app/_data\"><code class=\"language-plaintext highlighter-rouge\">./_app/_data/</code></a> directory. They can be accessed by Jekyll. (<a href=\"https://jekyllrb.com/docs/datafiles/\">More info</a>)</li>\n  <li>You should also change <code class=\"language-plaintext highlighter-rouge\">favicon.*</code> and <code class=\"language-plaintext highlighter-rouge\">apple-touch-icon.png</code> to yours.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">logo.png</code> is mainly used by Open Graph and Twitter Cards when there’s no featured image in a post, you should also design your own.</li>\n  <li>More customization please refer to theme specific documentation</li>\n</ul>\n\n<h2 id=\"tips\">Tips</h2>\n\n<ul>\n  <li>Not familiar with <a href=\"https://daringfireball.net/projects/markdown/\">Markdown</a>? Try <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">Markdown Cheatsheet</a>.</li>\n  <li>You can use Jekyll’s <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">built-in syntax highlighting</a>, I’ve included a default theme for this project.</li>\n  <li><a href=\"https://kramdown.gettalong.org/quickref.html#tables\">Tables</a> and <a href=\"https://kramdown.gettalong.org/quickref.html#footnotes\">footnotes</a> are also available to use.</li>\n</ul>",
      "excerpt": "Configuration Settings",
      "languages": null,
      "categories": ["note"],
      "tags": ["getting-started"]
    }
    
  

  
    ,
    {
      "title": "Themes",
      "permalink": "http://0.0.0.0:4321/themes.html",
      "link": "http://0.0.0.0:4321/themes.html",
      "date": "2014-06-10T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"overview\">Overview</h2>\n\n<p>In the latest build, I’ve added multiple themes support, finally, you can switch themes with just one command.</p>\n\n<p class=\"note\">This is an experimental feature and may change until the feature stabilizes.</p>\n\n<h2 id=\"installing-themes\">Installing Themes</h2>\n\n<p>The AMSF framework ships a default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>. You can also install as many themes as you like and switch to the one you prefer in any time.</p>\n\n<h3 id=\"via-git-github\">Via Git (GitHub)</h3>\n\n<p>The easiest way to install new theme is via <code class=\"language-plaintext highlighter-rouge\">theme-add</code>, the following command will install theme Curtana from its official repo <code class=\"language-plaintext highlighter-rouge\">amsf/amsf-curtana</code>:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>If you’d install custom theme from other users, append <code class=\"language-plaintext highlighter-rouge\">--user</code> in your command, the following command will install a new theme named <code class=\"language-plaintext highlighter-rouge\">bootstrap-sass</code> from <code class=\"language-plaintext highlighter-rouge\">sparanoid/amsf-bootstrap-sass</code></p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-add <span class=\"nt\">--theme</span><span class=\"o\">=</span>bootstrap-sass <span class=\"nt\">--user</span><span class=\"o\">=</span>sparanoid\n</code></pre></div></div>\n\n<h3 id=\"manually-install\">Manually Install</h3>\n\n<p>You can also install themes manually. find an AMSF theme (Curtana, for example), download the package and uncompress all files to <code class=\"language-plaintext highlighter-rouge\">.amsf-cache/themes</code> directory, the file structure should look like:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── .amsf-cache/ (Almace Scaffolding cache directory)\n|   ├── themes/\n|   |   └── curtana/\n|   |   |   └── assets/\n|   |   |   └── includes/\n|   |   |   └── layouts/\n|   |   |   └── pages/\n|   |   |   └── config.yml\n└── _app/\n</code></pre></div></div>\n\n<p>Then execute the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt activate <span class=\"nt\">--theme</span><span class=\"o\">=</span>curtana\n</code></pre></div></div>\n\n<p>You current theme will be backed up to <code class=\"language-plaintext highlighter-rouge\">.amsf-cache/themes/your-old-theme/</code> and the new theme <code class=\"language-plaintext highlighter-rouge\">curtana</code> will be installed to the appropriate directories.</p>\n\n<h2 id=\"upgrading-themes\">Upgrading Themes</h2>\n\n<p>You can update your current activated theme by the following command. The activated theme will be downloaded from GitHub automatically if there’s any update:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-update\n</code></pre></div></div>\n\n<p>Please note that only themes added via GitHub can be updated.</p>",
      "excerpt": "Overview",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Creating Your Own Theme",
      "permalink": "http://0.0.0.0:4321/creating-themes.html",
      "link": "http://0.0.0.0:4321/creating-themes.html",
      "date": "2014-06-09T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"overview\">Overview</h2>\n\n<p>You can create your own theme in AMSF, theme files are located in the following location (I use default theme Curtana here for better understanding):</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── curtana.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── example-page.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── ...\n</code></pre></div></div>\n\n<p>The theme specific config <code class=\"language-plaintext highlighter-rouge\">curtana.yml</code> should have the same filename as your theme name. It should contain theme specific variables and can also override AMSF built-in settings.</p>\n\n<p>More info about theme structure you can check out my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a>.</p>\n\n<p>You can also have multiple themes in your project, as many as you like. For example if you also have themes Bootstrap and Ghost installed, the file structure should be:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── _app/\n|   ├── _data/\n|   |   └── bootstrap.yml\n|   |   └── curtana.yml\n|   |   └── ghost.yml\n|   ├── _includes/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── curtana/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   |   |   └── ghost/\n|   |   |   |   └── includes/\n|   |   |   |   └── layouts/\n|   ├── _pages/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-blog.md\n|   |   |   |   └── example-fluid-container.md\n|   |   |   |   └── ...\n|   |   |   └── curtana/\n|   |   |   |   └── example-about.md\n|   |   |   |   └── example-news.md\n|   |   |   |   └── ...\n|   |   |   └── ghost/\n|   |   |   |   └── example-archive.md\n|   |   |   |   └── example-page.md\n|   |   |   |   └── example-tagcloud.md\n|   |   |   |   └── ...\n|   ├── assets/\n|   |   └── themes/\n|   |   |   └── bootstrap/\n|   |   |   |   └── _coffee/\n|   |   |   |   └── _scss/\n|   |   |   |   └── images/\n|   |   |   └── curtana/\n|   |   |   |   └── _js/\n|   |   |   |   └── _scss/\n|   |   |   |   └── svg/\n|   |   |   └── ghost/\n|   |   |   |   └── _js/\n|   |   |   |   └── _less/\n|   |   |   |   └── fonts/\n...\n</code></pre></div></div>\n\n<h2 id=\"amsf-options\">AMSF Options</h2>\n\n<p>There’re several built-in options you can use in your theme. These options can also be overridden in theme specific config.</p>\n\n<h3 id=\"sitename\"><code class=\"language-plaintext highlighter-rouge\">site.name</code></h3>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>{{ site.name }}<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;footer</span> <span class=\"na\">class=</span><span class=\"s\">\"footer\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>Almace Scaffolding<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n    <span class=\"nt\">&lt;li&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/atom.xml\"</span><span class=\"nt\">&gt;</span>Atom<span class=\"nt\">&lt;/a&gt;&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n<span class=\"nt\">&lt;/footer&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitedescription\"><code class=\"language-plaintext highlighter-rouge\">site.description</code></h3>\n\n<p>Site description, will appear in the document meta and Atom feed subtitle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ site.description }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"og:description\"</span> <span class=\"na\">content=</span><span class=\"s\">\"A super-fast Jekyll framework fighting against the website obesity.\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitefile\"><code class=\"language-plaintext highlighter-rouge\">site.file</code></h3>\n\n<p>Media assets URL used in posts, without trailing slash. In the most cases this URL should be powered by a CDN provider.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">file</span><span class=\"pi\">:</span> <span class=\"s\">//d349cztnlupsuf.cloudfront.net</span>\n</code></pre></div></div>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"{{ site.file }}/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;img</span> <span class=\"na\">src=</span><span class=\"s\">\"//d349cztnlupsuf.cloudfront.net/post-thumbnail.jpg\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"sitetwitter\"><code class=\"language-plaintext highlighter-rouge\">site.twitter</code></h3>\n\n<p>Site Twitter account handle.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/{{ site.twitter }}\"</span><span class=\"nt\">&gt;</span>Follow @{{ site.twitter }} on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"https://twitter.com/sparanoid\"</span><span class=\"nt\">&gt;</span>Follow @sparanoid on Twitter<span class=\"nt\">&lt;/a&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"siteforce_utf_8\"><code class=\"language-plaintext highlighter-rouge\">site.force_utf_8</code></h3>\n\n<p>Force UTF-8 encoding, enable this will simply add <code class=\"language-plaintext highlighter-rouge\">&lt;meta charset=\"utf-8\"&gt;</code> to the head of your pages.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{% if site.force_utf_8 %}\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n{% endif %}\n</code></pre></div></div>\n\n<h3 id=\"siterobots\"><code class=\"language-plaintext highlighter-rouge\">site.robots</code></h3>\n\n<p>You can define your own records in <code class=\"language-plaintext highlighter-rouge\">robots.txt</code>.</p>\n\n<p>Config:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">robots</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">User-agent:</span><span class=\"nv\"> </span><span class=\"s\">*\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/ajax/\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/@async\"</span>\n  <span class=\"pi\">-</span> <span class=\"s2\">\"</span><span class=\"s\">Disallow:</span><span class=\"nv\"> </span><span class=\"s\">/log/\"</span>\n</code></pre></div></div>\n\n<h2 id=\"theme-features\">Theme Features</h2>\n\n<p>There’re some features can be integrated into your theme.</p>\n\n<h3 id=\"basic-multi-language-support\">(Basic) Multi-Language Support</h3>\n\n<p>You can define post / page language in your front-matter field:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n</code></pre></div></div>\n\n<p>An additional <code class=\"language-plaintext highlighter-rouge\">lang</code> HTML attribute will be added to your final rendering:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;article</span> <span class=\"na\">lang=</span><span class=\"s\">\"zh-tw\"</span><span class=\"nt\">&gt;</span>\n  ...\n<span class=\"nt\">&lt;/article&gt;</span>\n</code></pre></div></div>\n\n<p>If your post / page content is multilingual, you can also define multiple languages in array:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">lang</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">zh-tw</span>\n  <span class=\"pi\">-</span> <span class=\"s\">en-us</span>\n</code></pre></div></div>\n\n<p>Please note that only the first item defined in <code class=\"language-plaintext highlighter-rouge\">lang</code> array will be used in final <code class=\"language-plaintext highlighter-rouge\">lang</code> output, the additional languages will be available in JSON feed output:</p>\n\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"languages\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"zh-tw\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"en-us\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"categories\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"note\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"tags\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"miscellaneous\"</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<h3 id=\"smooshing-assets\">Smooshing Assets</h3>\n\n<p>For better performance, Almace Scaffolding will find all the CSS, script links and images in compiled HTML, and outputs a version with all the CSS, scripts and images (Base64) written inline. Sounds cool? but it needs theme support. Here’s how:</p>\n\n<p>You can simply add the query string <code class=\"language-plaintext highlighter-rouge\">?assets-inline</code> at the end of the file you’d like to be inlined in production site:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- This CSS will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"{{ '/css/app.css?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"c\">&lt;!-- This script will be inlined into HTML --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/app.js?assets-inline' | prepend: amsf_theme_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-styles-support\">User Custom Styles Support</h3>\n\n<p>Define the following code snippet into your theme styles (Sass) will allow users to custom your theme without touching the theme files:</p>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">//</span> <span class=\"nt\">Import</span> <span class=\"nt\">user</span> <span class=\"nt\">custom</span> <span class=\"nt\">styles</span>\n<span class=\"k\">@import</span> <span class=\"s1\">\"../../../_scss/custom\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<h3 id=\"user-custom-scripts-support\">User Custom Scripts Support</h3>\n\n<p>Define the following code snippet into your theme template (it’s recommended to put it in footer) will allow users to add custom scripts without touching the theme files:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- User custom scripts --&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"{{ '/js/user.js?assets-inline' | prepend: amsf_user_assets }}\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"page--post-specific-css-block-support\">Page / Post Specific CSS Block Support</h3>\n\n<p>This allow your user to define page / post specific CSS blocks in front-matter data:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Page-wide custom CSS --&gt;</span>\n{{ amsf_page_css }}\n</code></pre></div></div>\n\n<h3 id=\"google-analytics-support\">Google Analytics Support</h3>\n\n<p>This allow your user to be able to use Google Analytics for their site, tracking ID can be changed in config file:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!-- Google Analytics tracking code --&gt;</span>\n{{ amsf_google_analytics }}\n</code></pre></div></div>\n\n<h3 id=\"post-published-time\">Post Published Time</h3>\n\n<p>This allow you to get the published time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_pubdate | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:published_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-01T00:00:00+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-modified-time\">Post Modified Time</h3>\n\n<p>This allow you to get the modified time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"{{ amsf_page_update | date_to_xmlschema }}\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;meta</span> <span class=\"na\">property=</span><span class=\"s\">\"article:modified_time\"</span> <span class=\"na\">content=</span><span class=\"s\">\"2014-01-03T03:17:49+08:00\"</span><span class=\"nt\">&gt;</span>\n</code></pre></div></div>\n\n<h3 id=\"post-reading-time\">Post Reading Time</h3>\n\n<p>This allow you to show average reading time of current post.</p>\n\n<p>Template:</p>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Reading time: {{ amsf_page_reading_time }}\n</code></pre></div></div>\n\n<p>Output:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gh\"># Less than 200 words</span>\nReading time: Less than 1 min\n\n<span class=\"gh\"># Around 200 words</span>\nReading time: 1 min\n\n<span class=\"gh\"># More than 200 words</span>\nReading time: 34 mins\n\n<span class=\"gh\"># More than 1 hour</span>\nReading time: 1 hr\nReading time: 1 hr 1 min\nReading time: 3 hrs 20 mins\n</code></pre></div></div>\n\n<h2 id=\"publishing-themes\">Publishing Themes</h2>\n\n<p>You really like your custom design and wanna show it off to the world? Cool, you can create (pack) you own theme by the following command:</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>grunt theme-save\n</code></pre></div></div>\n\n<p>The activated theme will be saved to AMSF cache (<code class=\"language-plaintext highlighter-rouge\">.amsf-cache/</code>) with correct file and directory structure, then you can upload your theme to GitHub.</p>\n\n<p>Still confusing? see my default theme <a href=\"https://github.com/amsf/amsf-curtana\">Curtana</a> for reference.</p>",
      "excerpt": "Overview",
      "languages": null,
      "categories": ["note"],
      "tags": ["customization"]
    }
    
  

  
    ,
    {
      "title": "Syntax Highlighting",
      "permalink": "http://0.0.0.0:4321/syntax-highlighting.html",
      "link": "http://0.0.0.0:4321/syntax-highlighting.html",
      "date": "2014-06-06T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Code highlighting demo, powered by Rouge. More info about code highlighting can be found at <a href=\"https://jekyllrb.com/docs/templates/#code-snippet-highlighting\">Jekyll’s documentation</a>.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.code-text (@link, @text) when (lightness(@link) &gt;= 50%) and (lightness(@link) &lt; lightness(@text)) {\n  @return-color: lighten(@text, 20%);\n  @return-value: 30%;\n}\n</code></pre></div></div>\n\n<div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\n  \"scripts\": {\n<span class=\"gd\">-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n</span>  },\n<span class=\"gi\">+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n</span>}\n</code></pre></div></div>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n\n<div class=\"language-php highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">echo</span> <span class=\"s2\">\"Hello, world!\"</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>\n\n<figure class=\"highlight\"><pre><code class=\"language-html\" data-lang=\"html\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"code\"><pre><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Load the http module to create an http server.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">http</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Configure our HTTP server to respond with Hello World to all requests.</span>\n<span class=\"kd\">var</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">createServer</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">request</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">writeHead</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"dl\">\"</span><span class=\"s2\">Content-Type</span><span class=\"dl\">\"</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">text/plain</span><span class=\"dl\">\"</span><span class=\"p\">});</span>\n  <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Hello World</span><span class=\"se\">\\n</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Listen on port 8000, IP defaults to 127.0.0.1</span>\n<span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">8000</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Put a friendly message on the terminal</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Server running at https://127.0.0.1:8000/</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n</code></pre></div></div>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">.code-text</span> <span class=\"o\">(</span><span class=\"k\">@link</span><span class=\"p\">,</span> <span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"n\">and</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">link</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-color</span><span class=\"p\">:</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"nb\">text</span><span class=\"p\">,</span> <span class=\"m\">20%</span><span class=\"p\">);</span>\n  <span class=\"k\">@return-value</span><span class=\"p\">:</span> <span class=\"m\">30%</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;!doctype html&gt;</span>\n<span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>Title!<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">id=</span><span class=\"s\">\"title\"</span> <span class=\"na\">class=</span><span class=\"s\">\"heading\"</span><span class=\"nt\">&gt;</span>Example<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;p</span> <span class=\"na\">id=</span><span class=\"s\">\"foo\"</span><span class=\"nt\">&gt;</span>Hello, World!<span class=\"nt\">&lt;/p&gt;</span>\n    <span class=\"nt\">&lt;script </span><span class=\"na\">type=</span><span class=\"s\">\"text/javascript\"</span><span class=\"nt\">&gt;</span><span class=\"kd\">var</span> <span class=\"nx\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"nt\">&lt;/script&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">type=</span><span class=\"s\">\"text/css\"</span><span class=\"nt\">&gt;</span><span class=\"nf\">#foo</span> <span class=\"p\">{</span> <span class=\"nl\">font-weight</span><span class=\"p\">:</span> <span class=\"nb\">bold</span><span class=\"p\">;</span> <span class=\"p\">}</span><span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-llvm highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">; copied from https://llvm.org/docs/LangRef.html#module-structure</span>\n<span class=\"c1\">; Declare the string constant as a global constant.</span>\n<span class=\"vg\">@.str</span> <span class=\"p\">=</span> <span class=\"k\">private</span> <span class=\"k\">unnamed_addr</span> <span class=\"k\">constant</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]</span> <span class=\"s\">c\"hello world\\0A\\00\"</span>\n\n<span class=\"c1\">; External declaration of the puts function</span>\n<span class=\"k\">declare</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"k\">nocapture</span><span class=\"p\">)</span> <span class=\"k\">nounwind</span>\n\n<span class=\"c1\">; Definition of main function</span>\n<span class=\"k\">define</span> <span class=\"kt\">i32</span> <span class=\"vg\">@main</span><span class=\"p\">()</span> <span class=\"p\">{</span>   <span class=\"c1\">; i32()*</span>\n  <span class=\"c1\">; Convert [13 x i8]* to i8  *...</span>\n  <span class=\"nv\">%cast210</span> <span class=\"p\">=</span> <span class=\"k\">getelementptr</span> <span class=\"p\">[</span><span class=\"m\">13</span> <span class=\"p\">x</span> <span class=\"kt\">i8</span><span class=\"p\">]*</span> <span class=\"vg\">@.str</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"kt\">i64</span> <span class=\"m\">0</span>\n\n  <span class=\"c1\">; Call puts function to write out the string to stdout.</span>\n  <span class=\"k\">call</span> <span class=\"kt\">i32</span> <span class=\"vg\">@puts</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">*</span> <span class=\"nv\">%cast210</span><span class=\"p\">)</span>\n  <span class=\"k\">ret</span> <span class=\"kt\">i32</span> <span class=\"m\">0</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">; Named metadata</span>\n<span class=\"nv\">!1</span> <span class=\"p\">=</span> <span class=\"kt\">metadata</span> <span class=\"p\">!{</span><span class=\"kt\">i32</span> <span class=\"m\">42</span><span class=\"p\">}</span>\n<span class=\"nv\">!foo</span> <span class=\"p\">=</span> <span class=\"p\">!{</span><span class=\"nv\">!1</span><span class=\"p\">,</span> <span class=\"k\">null</span><span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;&lt;/xsl:template&gt;</span>\n</code></pre></div></div>\n\n<div class=\"language-moonscript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">require</span><span class=\"w\"> </span><span class=\"s2\">\"my.module\"</span><span class=\"w\">\n\n</span><span class=\"n\">a_table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"ss\">foo:</span><span class=\"w\"> </span><span class=\"s1\">'bar'</span><span class=\"w\">\n  </span><span class=\"ss\">interpolated:</span><span class=\"w\"> </span><span class=\"s2\">\"foo-</span><span class=\"si\">#{</span><span class=\"n\">other</span><span class=\"p\">.</span><span class=\"n\">stuff</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"w\">\n  </span><span class=\"ss\">\"string\":</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n  </span><span class=\"ss\">do:</span><span class=\"w\"> </span><span class=\"s1\">'keyword'</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MyClass</span><span class=\"w\"> </span><span class=\"k\">extends</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span><span class=\"w\">\n  </span><span class=\"ss\">new:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"vi\">@init</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s1\">'default'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@derived</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"vi\">@init</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n    </span><span class=\"k\">super</span><span class=\"o\">!</span><span class=\"w\">\n\n  </span><span class=\"ss\">other:</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\">\n    </span><span class=\"vi\">@foo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<div class=\"language-apache highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">AddDefaultCharset</span> UTF-8\n\n<span class=\"nc\">RewriteEngine</span> <span class=\"ss\">On</span>\n\n<span class=\"c\"># Serve gzipped version if available and accepted</span>\n<span class=\"nc\">AddEncoding</span> x-gzip .gz\n<span class=\"nc\">RewriteCond</span> %{HTTP:Accept-Encoding} gzip\n<span class=\"nc\">RewriteCond</span> %{REQUEST_FILENAME}.gz -f\n<span class=\"nc\">RewriteRule</span> ^(.*)$ $1.gz [QSA,L]\n<span class=\"p\">&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.css\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/css\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.js\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> application/javascript\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n&lt;</span><span class=\"nl\">FilesMatch</span><span class=\"sr\"> \\.html\\.gz$</span><span class=\"p\">&gt;\n</span>  <span class=\"nc\">ForceType</span> text/html\n  <span class=\"nc\">Header</span> <span class=\"ss\">append</span> Vary Accept-Encoding\n<span class=\"p\">&lt;/</span><span class=\"nl\">FilesMatch</span><span class=\"p\">&gt;\n</span></code></pre></div></div>\n\n<div class=\"language-prolog highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">),</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"ss\">plus</span><span class=\"p\">(</span><span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">),</span> <span class=\"ss\">times</span><span class=\"p\">(</span><span class=\"nv\">DA</span><span class=\"p\">,</span> <span class=\"nv\">B</span><span class=\"p\">)))</span>\n   <span class=\"o\">&lt;=</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DA</span><span class=\"p\">)</span> <span class=\"ss\">and</span> <span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">DB</span><span class=\"p\">).</span>\n\n<span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">).</span>\n<span class=\"ss\">diff</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"ss\">not</span> <span class=\"ss\">equal</span><span class=\"p\">(</span><span class=\"nv\">Y</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">).</span>\n</code></pre></div></div>\n\n<div class=\"language-ocaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">(* Binary tree with leaves car­rying an integer. *)</span>\n<span class=\"k\">type</span> <span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"nc\">Leaf</span> <span class=\"k\">of</span> <span class=\"kt\">int</span> <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"k\">of</span> <span class=\"n\">tree</span> <span class=\"o\">*</span> <span class=\"n\">tree</span>\n\n<span class=\"k\">let</span> <span class=\"k\">rec</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"k\">match</span> <span class=\"n\">tree</span> <span class=\"k\">with</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Leaf</span> <span class=\"n\">v</span> <span class=\"o\">-&gt;</span> <span class=\"n\">test</span> <span class=\"n\">v</span>\n  <span class=\"o\">|</span> <span class=\"nc\">Node</span> <span class=\"p\">(</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n      <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">left</span>\n      <span class=\"o\">||</span> <span class=\"n\">exists_leaf</span> <span class=\"n\">test</span> <span class=\"n\">right</span>\n\n<span class=\"k\">let</span> <span class=\"n\">has_even_leaf</span> <span class=\"n\">tree</span> <span class=\"o\">=</span>\n  <span class=\"n\">exists_leaf</span> <span class=\"p\">(</span><span class=\"k\">fun</span> <span class=\"n\">n</span> <span class=\"o\">-&gt;</span> <span class=\"n\">n</span> <span class=\"ow\">mod</span> <span class=\"mi\">2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">tree</span>\n</code></pre></div></div>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">SELECT</span> <span class=\"o\">*</span> <span class=\"k\">FROM</span> <span class=\"nv\">`users`</span> <span class=\"k\">WHERE</span> <span class=\"nv\">`user`</span><span class=\"p\">.</span><span class=\"nv\">`id`</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</code></pre></div></div>\n\n<div class=\"language-smalltalk highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">quadMultiply:</span> <span class=\"nv\">i1</span> <span class=\"nf\">and:</span> <span class=\"nv\">i2</span>\n    <span class=\"c\">\"This method multiplies the given numbers by each other\n    and the result by 4.\"</span>\n    <span class=\"p\">|</span><span class=\"nv\"> mul </span><span class=\"p\">|</span>\n    <span class=\"nv\">mul</span> <span class=\"o\">:=</span> <span class=\"nv\">i1</span> <span class=\"nf\">*</span> <span class=\"nv\">i2</span><span class=\"p\">.</span>\n    <span class=\"o\">^</span><span class=\"nv\">mul</span> <span class=\"nf\">*</span> <span class=\"m\">4</span>\n</code></pre></div></div>\n\n<div class=\"language-racket highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">#</span><span class=\"nv\">lang</span> <span class=\"nv\">racket</span>\n\n<span class=\"c1\">;; draw a graph of cos and deriv^3(cos)</span>\n<span class=\"p\">(</span><span class=\"k\">require</span> <span class=\"nv\">plot</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">((</span><span class=\"nf\">deriv</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"nv\">x</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nb\">/</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nb\">-</span> <span class=\"nv\">x</span> <span class=\"mf\">0.001</span><span class=\"p\">)))</span> <span class=\"mf\">0.001</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"p\">(</span><span class=\"nf\">thrice</span> <span class=\"nv\">f</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"p\">(</span><span class=\"nf\">x</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"p\">(</span><span class=\"nf\">f</span> <span class=\"nv\">x</span><span class=\"p\">)))))</span>\n<span class=\"p\">(</span><span class=\"nf\">plot</span> <span class=\"p\">(</span><span class=\"nb\">list</span> <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"p\">((</span><span class=\"nf\">thrice</span> <span class=\"nv\">deriv</span><span class=\"p\">)</span> <span class=\"nv\">sin</span><span class=\"p\">)</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n            <span class=\"p\">(</span><span class=\"nf\">function</span> <span class=\"nv\">cos</span> <span class=\"mi\">-5</span> <span class=\"mi\">5</span> <span class=\"nt\">#:color</span> <span class=\"ss\">'blue</span><span class=\"p\">)))</span>\n\n<span class=\"c1\">;; Print the Greek alphabet</span>\n<span class=\"p\">(</span><span class=\"nf\">for</span> <span class=\"p\">([</span><span class=\"nf\">i</span> <span class=\"p\">(</span><span class=\"nf\">in-range</span> <span class=\"mi\">25</span><span class=\"p\">)])</span>\n  <span class=\"p\">(</span><span class=\"nb\">displayln</span>\n   <span class=\"p\">(</span><span class=\"nb\">integer-&gt;char</span>\n    <span class=\"p\">(</span><span class=\"nb\">+</span> <span class=\"nv\">i</span> <span class=\"p\">(</span><span class=\"nb\">char-&gt;integer</span> <span class=\"sc\">#\\u3B1</span><span class=\"p\">)))))</span>\n\n<span class=\"c1\">;; An echo server</span>\n<span class=\"p\">(</span><span class=\"k\">define</span> <span class=\"nv\">listener</span> <span class=\"p\">(</span><span class=\"k\">tcp-listen</span> <span class=\"mi\">12345</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">let</span> <span class=\"nv\">echo-server</span> <span class=\"p\">()</span>\n  <span class=\"p\">(</span><span class=\"k\">define-values</span> <span class=\"p\">(</span><span class=\"nf\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">tcp-accept</span> <span class=\"nv\">listener</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"nb\">thread</span> <span class=\"p\">(</span><span class=\"k\">λ</span> <span class=\"p\">()</span>\n             <span class=\"p\">(</span><span class=\"nf\">copy-port</span> <span class=\"nv\">in</span> <span class=\"nv\">out</span><span class=\"p\">)</span>\n             <span class=\"p\">(</span><span class=\"nb\">close-output-port</span> <span class=\"nv\">out</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"nf\">echo-server</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<div class=\"language-puppet highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">service</span> <span class=\"p\">{</span> <span class=\"s1\">'ntp'</span><span class=\"p\">:</span>\n  <span class=\"py\">name</span>      <span class=\"p\">=&gt;</span> <span class=\"nv\">$service_name</span><span class=\"p\">,</span>\n  <span class=\"py\">ensure</span>    <span class=\"p\">=&gt;</span> <span class=\"n\">running</span><span class=\"p\">,</span>\n  <span class=\"py\">enable</span>    <span class=\"p\">=&gt;</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"kp\">subscribe</span> <span class=\"p\">=&gt;</span> <span class=\"nc\">File</span><span class=\"p\">[</span><span class=\"s1\">'ntp.conf'</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-dart highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">];</span>\n  <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"n\">a</span> <span class=\"k\">in</span> <span class=\"n\">collection</span><span class=\"p\">){</span>\n    <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-tcl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>proc cross_sum <span class=\"p\">{</span>s<span class=\"p\">}</span> <span class=\"p\">{</span>expr <span class=\"p\">[</span>join <span class=\"p\">[</span>split $s <span class=\"s2\">\"\"</span><span class=\"p\">]</span> +<span class=\"p\">]}</span>\n</code></pre></div></div>\n\n<div class=\"language-csharp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// reverse byte order (16-bit)</span>\n<span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"n\">UInt16</span> <span class=\"nf\">ReverseBytes</span><span class=\"p\">(</span><span class=\"n\">UInt16</span> <span class=\"k\">value</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">UInt16</span><span class=\"p\">)((</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFFU</span><span class=\"p\">)</span> <span class=\"p\">&lt;&lt;</span> <span class=\"m\">8</span> <span class=\"p\">|</span> <span class=\"p\">(</span><span class=\"k\">value</span> <span class=\"p\">&amp;</span> <span class=\"m\">0xFF00U</span><span class=\"p\">)</span> <span class=\"p\">&gt;&gt;</span> <span class=\"m\">8</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<div class=\"language-vb highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">Private</span> <span class=\"k\">Sub</span> <span class=\"nf\">Form_Load</span><span class=\"p\">()</span>\n    <span class=\"c1\">' Execute a simple message box that says \"Hello, World!\"</span>\n    <span class=\"n\">MsgBox</span> <span class=\"s\">\"Hello, World!\"</span>\n<span class=\"k\">End</span> <span class=\"k\">Sub</span>\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>    <span class=\"c1\"># write Fibonacci series up to n\n</span>    <span class=\"s\">\"\"\"Print a Fibonacci series up to n.\"\"\"</span>\n    <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n    <span class=\"k\">while</span> <span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span> <span class=\"n\">a</span><span class=\"p\">,</span>\n        <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n</code></pre></div></div>\n\n<div class=\"language-perl highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">#!/usr/bin/env perl</span>\n<span class=\"k\">use</span> <span class=\"nv\">warnings</span><span class=\"p\">;</span>\n<span class=\"k\">print</span> <span class=\"p\">\"</span><span class=\"s2\">a: </span><span class=\"p\">\";</span>\n<span class=\"k\">my</span> <span class=\"nv\">$a</span> <span class=\"o\">=</span> <span class=\"p\">\"</span><span class=\"s2\">foo</span><span class=\"p\">\";</span>\n<span class=\"k\">print</span> <span class=\"nv\">$a</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Markdown has cool <span class=\"p\">[</span><span class=\"nv\">reference links</span><span class=\"p\">][</span><span class=\"ss\">ref 1</span><span class=\"p\">]</span>\nand <span class=\"p\">[</span><span class=\"nv\">regular links too</span><span class=\"p\">](</span><span class=\"sx\">https://example.com</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"ss\">ref 1</span><span class=\"p\">]:</span> <span class=\"sx\">https://example.com</span>\n</code></pre></div></div>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">set PHP-FPM parameters</span>\n  <span class=\"na\">lineinfile</span><span class=\"pi\">:</span>\n    <span class=\"na\">dest</span><span class=\"pi\">:</span> <span class=\"s\">/etc/php-fpm.conf</span>\n    <span class=\"na\">regexp</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^\"</span>\n    <span class=\"na\">insertafter</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">^;\"</span>\n    <span class=\"na\">line</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"nv\"> </span><span class=\"s\">=</span><span class=\"nv\"> </span><span class=\"s\">\"</span>\n  <span class=\"na\">with_items</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error_log'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">/var/log/php-fpm/error.log'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">log_level'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">error'</span> <span class=\"pi\">}</span>\n    <span class=\"pi\">-</span> <span class=\"pi\">{</span> <span class=\"nv\">param</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">emergency_restart_threshold'</span><span class=\"pi\">,</span> <span class=\"nv\">value</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">10'</span> <span class=\"pi\">}</span>\n</code></pre></div></div>",
      "excerpt": "Code highlighting demo, powered by Rouge. More info about code highlighting can be found at Jekyll’s documentation.",
      "languages": null,
      "categories": ["note"],
      "tags": ["cortana"]
    }
    
  

  
    ,
    {
      "title": "Markdown Features Test",
      "permalink": "http://0.0.0.0:4321/markdown-features-test.html",
      "link": "http://0.0.0.0:4321/markdown-features-test.html",
      "date": "2014-06-06T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"indented-code-blocks\">Indented Code Blocks</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>def show\n  @widget = Widget(params[:id])\n  respond_to do |format|\n    format.html # show.html.erb\n    format.json { render json: @widget }\n  end\nend\n</code></pre></div></div>\n\n<h2 id=\"liquid-tag-with-linenos-support\">Liquid Tag with <code class=\"language-plaintext highlighter-rouge\">linenos</code> Support</h2>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"code\"><pre><span class=\"k\">def</span> <span class=\"nf\">show</span>\n  <span class=\"vi\">@widget</span> <span class=\"o\">=</span> <span class=\"no\">Widget</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"ss\">:id</span><span class=\"p\">])</span>\n  <span class=\"n\">respond_to</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"nb\">format</span><span class=\"o\">|</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">html</span> <span class=\"c1\"># show.html.erb</span>\n    <span class=\"nb\">format</span><span class=\"p\">.</span><span class=\"nf\">json</span> <span class=\"p\">{</span> <span class=\"n\">render</span> <span class=\"ss\">json: </span><span class=\"vi\">@widget</span> <span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></figure>\n\n<h2 id=\"gfm-code-blocks-fenced_code_blocks\">GFM Code Blocks (<code class=\"language-plaintext highlighter-rouge\">fenced_code_blocks</code>)</h2>\n\n<div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">/* Background color function */</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&gt;=</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#000</span><span class=\"p\">,</span> <span class=\"n\">lighten</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">30%</span><span class=\"p\">),</span> <span class=\"m\">10%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"nc\">.code-bg</span> <span class=\"o\">(</span><span class=\"k\">@v</span><span class=\"p\">)</span> <span class=\"n\">when</span> <span class=\"p\">(</span><span class=\"n\">lightness</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"err\">&lt;</span> <span class=\"m\">50%</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">@return-bg</span><span class=\"p\">:</span> <span class=\"nb\">mix</span><span class=\"p\">(</span><span class=\"m\">#fff</span><span class=\"p\">,</span> <span class=\"n\">darken</span><span class=\"p\">(</span><span class=\"err\">@</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"m\">10%</span><span class=\"p\">),</span> <span class=\"m\">70%</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"smartypants\">SmartyPants</h3>\n\n<p>“Aha! What’s up, man?” – Jony said.</p>\n\n<h2 id=\"tables\">Tables</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Upvotes</th>\n      <th>Downvotes</th>\n      <th>Abstentions</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Alice</td>\n      <td>10</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>Charlie</td>\n      <td>7</td>\n      <td>9</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <td>Totals</td>\n      <td>21</td>\n      <td>23</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"intra-emphasis\">Intra-emphasis</h2>\n\n<p>foo_bar_baz</p>\n\n<h2 id=\"auto-link\">Auto-link</h2>\n\n<p>https://sparanoid.com/</p>\n\n<h2 id=\"strikethroughs\">Strikethroughs</h2>\n\n<p>This is <del>good</del> bad.</p>\n\n<h2 id=\"space-after-headers\">Space after Headers</h2>\n\n<p>###This is not a header.</p>\n\n<h2 id=\"superscripts\">Superscripts</h2>\n\n<p>This is the 2^(nd) time.</p>\n\n<h2 id=\"footnotes\">Footnotes</h2>\n\n<p>This<sup id=\"fnref:1\" role=\"doc-noteref\"><a href=\"#fn:1\" class=\"footnote\" rel=\"footnote\">1</a></sup> is<sup id=\"fnref:2\" role=\"doc-noteref\"><a href=\"#fn:2\" class=\"footnote\" rel=\"footnote\">2</a></sup> a sentence<sup id=\"fnref:3\" role=\"doc-noteref\"><a href=\"#fn:3\" class=\"footnote\" rel=\"footnote\">3</a></sup>.</p>\n\n<h2 id=\"id-日本語タイトル\">ID 日本語タイトル</h2>\n\n<p>Expected id should be <code class=\"language-plaintext highlighter-rouge\">id-ri-ben-yu-taitoru</code>.</p>\n\n<h2 id=\"id-中文標題\">ID 中文標題</h2>\n\n<p>Expected id should be <code class=\"language-plaintext highlighter-rouge\">id-zhong-wen-biao-ti</code>.</p>\n\n<div class=\"footnotes\" role=\"doc-endnotes\">\n  <ol>\n    <li id=\"fn:1\" role=\"doc-endnote\">\n      <p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor. <a href=\"#fnref:1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:2\" role=\"doc-endnote\">\n      <p><a href=\"https://web.archive.org/web/20160425094356/http://blog.readability.com:80/2012/06/announcement/\">An Important Announcement</a> by Richard Ziade at Readability <a href=\"#fnref:2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n    <li id=\"fn:3\" role=\"doc-endnote\">\n      <p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties. <a href=\"#fnref:3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;&#xfe0e;</a></p>\n    </li>\n  </ol>\n</div>",
      "excerpt": "Indented Code Blocks",
      "languages": null,
      "categories": ["note"],
      "tags": ["miscellaneous"]
    }
    
  

  
    ,
    {
      "title": "Markup Example",
      "permalink": "http://0.0.0.0:4321/markup-example.html",
      "link": "http://0.0.0.0:4321/markup-example.html",
      "date": "2014-06-05T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>Lorem lean startup ipsum <strong>product market fit customer development</strong> acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying <a href=\"#\">crowded market</a> pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.</p>\n\n<blockquote>\n  <p>Two days ago the Chinese website <a href=\"https://www.taobao.com/\">Taobao</a> held a discount promotion to celebrate what’s known as “double sticks day” in China. In a single 24hr period, they conducted 19bn RMB (US$3.06bn) of business.</p>\n  <footer>\n    <cite><a href=\"https://web.archive.org/web/20150223182728/http://westiseast.co.uk:80/blog/taobao-sales-19-billion-bonanza/\">Chris West</a></cite>\n  </footer>\n</blockquote>\n\n<blockquote>\n  <p>Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n</blockquote>\n\n<p>Good afterble constanoon, this sweet hongi is as bung as a stuffed morepork. Mean while, in the marae, Dr Ropata and Hairy Maclary from Donaldson’s Dairy were up to no good with a bunch of bloody troties.</p>\n\n<h2 id=\"inline-html-elements\">Inline HTML elements</h2>\n\n<p>HTML defines a long list of available inline tags, a complete list of which can be found on the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">Mozilla Developer Network</a>.</p>\n\n<ul>\n  <li><strong>To bold text</strong>, use <code class=\"language-plaintext highlighter-rouge\">&lt;strong&gt;</code>.</li>\n  <li><em>To italicize text</em>, use <code class=\"language-plaintext highlighter-rouge\">&lt;em&gt;</code>.</li>\n  <li>Abbreviations, like <abbr title=\"HyperText Markup Langage\">HTML</abbr> should use <code class=\"language-plaintext highlighter-rouge\">&lt;abbr&gt;</code>, with an optional <code class=\"language-plaintext highlighter-rouge\">title</code> attribute for the full phrase.</li>\n  <li>Citations, like <cite>— Tunghsiao Liu &amp; Mark otto</cite>, should use <code class=\"language-plaintext highlighter-rouge\">&lt;cite&gt;</code>.</li>\n  <li><del>Deleted</del> text should use <code class=\"language-plaintext highlighter-rouge\">&lt;del&gt;</code> and <ins>inserted</ins> text should use <code class=\"language-plaintext highlighter-rouge\">&lt;ins&gt;</code>.</li>\n  <li>Superscript <sup>text</sup> uses <code class=\"language-plaintext highlighter-rouge\">&lt;sup&gt;</code> and subscript <sub>text</sub> uses <code class=\"language-plaintext highlighter-rouge\">&lt;sub&gt;</code>.</li>\n</ul>\n\n<hr />\n\n<ul>\n  <li>With the exception of Nietzsche, no other madman has contributed so much to human sanity as has Louis Althusser. He is mentioned twice in the Encyclopaedia Britannica as someone’s teacher. There could be no greater lapse: for two important decades (the 60s and the 70s), Althusser was at the eye of all the important cultural storms. He fathered quite a few of them.</li>\n  <li>This newly-found obscurity forces me to summarize his work before suggesting a few (minor) modifications to it.\n    <ul>\n      <li>Society consists of practices: economic, political and ideological.\n        <ul>\n          <li>Althusser defines a practice as:</li>\n          <li>“Any process of transformation of a determinate product, affected by a determinate human labour, using determinate means (of production)”\n            <ul>\n              <li>The economic practice (the historically specific mode of production) transforms raw materials to finished products using human labour and other means of production, all organized within defined webs of inter-relations. The political practice does the same with social relations as the raw materials. Finally, ideology is the transformation of the way that a subject relates to his real life conditions of existence.\n                <ul>\n                  <li>This is a rejection of the mechanistic worldview (replete with bases and superstructures). It is a rejection of the Marxist theorization of ideology. It is a rejection of the Hegelian fascist “social totality”. It is a dynamic, revealing, modern day model.</li>\n                  <li>“The objective internal reference … the system of questions commanding the answers given”</li>\n                </ul>\n              </li>\n              <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.\n                <ul>\n                  <li>Subjects to what? The answer: to the material practices of the ideology. This (the creation of subjects) is done by the acts of “hailing” or “interpellation”. These are acts of attracting attention (hailing) , forcing the individuals to generate meaning (interpretation) and making them participate in the practice.</li>\n                  <li>What happens in a pluralistic environment rich in competing ideologies?\n                    <ul>\n                      <li>Clarifying the HOW, though, does not shed light on the WHY.\n                        <ul>\n                          <li>is the fact that in the new one, the second text is articulated with the lapses in the first text … (Marx measures) the problematic contained</li>\n                        </ul>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </li>\n              <li>Ideology is a practice with lived and material dimensions. It has costumes, rituals, behaviour patterns, ways of thinking. The State employs Ideological Apparatuses (ISAs) to reproduce ideology through practices and productions: (organized) religion, the education system, the family, (organized) politics, the media, the industries of culture.</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>These theoretical tools were widely used to analyze the Advertising and the film industries.</li>\n</ul>\n\n<ol>\n  <li>Ordered list</li>\n  <li>Ordered list\n    <ol>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list\n            <ol>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list\n                <ol>\n                  <li>Ordered list</li>\n                </ol>\n              </li>\n              <li>Ordered list</li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>Ordered list\n        <ol>\n          <li>Ordered list</li>\n          <li>Ordered list</li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n  <li>Ordered list</li>\n</ol>\n\n<hr />\n\n<h2 id=\"this-should-be-replaced\">“This should be replaced.”</h2>\n\n<p>“This should be replaced.”</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-1\">‘This should be replaced.’</h2>\n\n<p>‘This should be replaced.’</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-2\">「This should be replaced.」</h2>\n\n<p>「This should be replaced.」</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-3\">『This should be replaced.』</h2>\n\n<p>『This should be replaced.』</p>\n\n<p>This is a normal paragraph.</p>\n\n<h2 id=\"this-should-be-replaced-4\">（This should be replaced.）</h2>\n\n<p>（This should be replaced.）</p>\n\n<p>This is a normal paragraph.</p>\n\n<hr />\n\n<p>Most of these elements are styled by browsers with few modifications on our part.</p>\n\n<p>Maui and his rough as guts piece of pounamu, what a stink buzz. Bro, quater-acre patches are really naff good with bung mates, aye. You have no idea how beached as our random kais were aye. Every time I see those beautiful lengths of number 8 wire it’s like Castle Hill all over again aye, do you happen to have a bucket or a hose bro?</p>\n\n<h2 id=\"h2-headings\">H2 Headings</h2>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h3 id=\"h3-headings\">H3 Headings</h3>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h4 id=\"h4-headings\">H4 Headings</h4>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h5 id=\"h5-headings\">H5 Headings</h5>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<h6 id=\"h6-headings\">H6 Headings</h6>\n\n<p>You have no idea how pretty suss our same same but different toasted sandwiches were aye. Every time I see those carked it keas it’s like the dairy all over again aye, you don’t know his story, bro. Anyway, Hairy Maclary from Donaldson’s Dairy is just Mrs Falani in disguise, to find the true meaning of life, one must start frying up with the hangi, mate. After the rugby ball is jumped the ditch, you add all the stink girl guide biscuits to the trotie you’ve got yourself a meal.</p>\n\n<hr />\n\n<p>He was alone then; when he sat in that same chair his wife now sits in, and I shared with him the positive result to his HIV test. Though he seemed disinterested, vaguely detached, he had obviously heard of HIV before. His chart from the local clinic indicated a previous history of and treatment for anal gonorrhea, two acute cases of syphilis in the past three years, and a urinary tract infection last month. His only listed sexual contact, his wife. Who, strangely enough, only tested positive for one of the syphilis infections.</p>\n\n<p>“Mistake, this! I am married, not a giver of ass.”</p>\n\n<p>Giver of ass? That’s one for the archive, I think.</p>\n\n<p>Unwilling to engage his obvious denials, I ignore the comment and instead explain that due to a higher than acceptable potential of a false positive result, we won’t consider his oral test as confirmatory until the more accurate blood analysis is in.</p>\n\n<p>“I no understand”, he says to the room in general.</p>\n\n<p>His annoyance is obvious. Abrasively, he offers me his exposed forearm. This, I assume, is my cue to draw his blood. Ignoring the indignant anger beginning to rise, I tighten my jaw, then swab the fat vein with betadine, working the cool, brown liquid off in concentric circles, using strong medicinal smelling alcohol. I use the betadine, as most of these men work in the mines, and dirt three layers thick on exposed skin is the norm. As the first tube in the vacationer fills with blood, he asks,</p>\n\n<p>“So how I get this thing?”</p>\n\n<p>Ah, I see we are going to play the circuitous dance of ignorance. Sounding just a little too clinical, I begin the HIV 101 mantra.</p>\n\n<p>“Well, people acquire HIV through certain types of sex with an infected person, through sharing needles with an infected person, and sometimes through a blood transfusion. Have you ever had a blood transfusion, sir?”</p>\n\n<p>I take the dismissive wave of his hand as a no to the transfusion question. I don’t make a great attempt to navigate a comfort zone here; instinct and experience telling me he has already set the script of what is to follow.</p>\n\n<p>“She is fucking other cocks my whore devil wife”?\nBingo! A narrative that over the next six weeks I will hear from several other men as well.</p>\n\n<p>“These whores, all they want is the cock!”\nCareful Skippy, you really aren’t as convincing as you think you are.</p>\n\n<blockquote>\n  <p>\n    “She is fucking other cocks my whore devil wife”?\n    <br />\n    Bingo! A narrative that over the next six weeks I will hear from several other men as well.\n  </p>\n\n  <p>\n    “These whores, all they want is the cock!”\n    <br />\n    Careful Skippy, you really aren’t as convincing as you think you are.\n  </p>\n\n  <footer>\n    <cite>from <a href=\"https://medium.com/absurdist/a-world-away-c2b692bd808e\">A World Away</a> by alto</cite>\n  </footer>\n</blockquote>\n\n<details>\n  <summary>Supported Fonts</summary>\n  <ul>\n    <li><a href=\"https://www.microsoft.com/typography/otspec/features_fj.htm#qwid\">Microsoft Registered features - qwid</a></li>\n    <li><a href=\"https://typekit.com/fonts/kozuka-mincho-pr6n\">Kozuka Mincho Pr6n</a></li>\n  </ul>\n</details>\n\n<h2 id=\"chinese-paragraph\">Chinese Paragraph</h2>\n\n<p lang=\"zh-cn\">「名词成灾」的流行病里，灾情最严重的该是所谓「科学至上」（scientism）。在现代的工业社会里，科学早成显贵，科技更是骄子，所以知识分子的口头与笔下，有意无意，总爱用一些「学术化」的抽象名词，好显得客观而精确。有人称之为「伪术语」（pseudo-jargon）。例如：明明是 first step，却要说成 initial phase：明明是 letter，却要说成 communication，都属此类。</p>\n\n<h2 id=\"japanese-paragraph\">Japanese Paragraph</h2>\n\n<p lang=\"ja\">『雪国』の主な舞台は、上越国境の清水トンネルを抜けた湯沢温泉であるが、この作品も『伊豆の踊子』同様に、川端康成の旅の出会いから生まれたもので、雪中の火事も実際に起ったことだと川端は語っている。川端は作品内で故意に地名を隠しているが、1934 年（昭和 9 年）6 月 13 日より 1937 年まで新潟県湯沢町の高半旅館（現：高半ホテル）に逗留していたことを随筆『「雪国」の旅』で述べている。</p>\n\n<div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gu\">## H2 Heading</span>\n<span class=\"gu\">### H3 Heading</span>\n<span class=\"gu\">#### H4 Heading</span>\n<span class=\"gu\">##### H5 Heading</span>\n<span class=\"gu\">###### H6 Heading</span>\n</code></pre></div></div>\n\n<h2 id=\"newsletters-signup-form\">Newsletters Signup Form</h2>\n\n<form action=\"//sparanoid.us2.list-manage.com/subscribe/post?u=eef500b1fe3fe595f03a27605&amp;id=7bbabe95a9\" method=\"post\">\n  <input name=\"cm-uykhir-uykhir\" type=\"email\" placeholder=\"Your Email\" required=\"\" />\n</form>",
      "excerpt": "Lorem lean startup ipsum product market fit customer development acquihire technical cofounder. User engagement A/B testing shrink a market venture capital pitch deck. Social bookmarking group buying crowded market pivot onboarding freemium prototype ping pong. Early stage disruptive ecosystem community outreach dynamic location based strategic investor.",
      "languages": null,
      "categories": ["note"],
      "tags": ["miscellaneous"]
    }
    
  

  
    ,
    {
      "title": "Custom HTML Markups",
      "permalink": "http://0.0.0.0:4321/custom-html-markups.html",
      "link": "http://0.0.0.0:4321/custom-html-markups.html",
      "date": "2014-06-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<h2 id=\"note-store-and-download\"><code class=\"language-plaintext highlighter-rouge\">.note</code>, <code class=\"language-plaintext highlighter-rouge\">.store</code>, and <code class=\"language-plaintext highlighter-rouge\">.download</code></h2>\n\n<p>A paragraph block with a thin border line.</p>\n\n<h3 id=\"usage\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">Download</span><span class=\"p\">](</span><span class=\"sx\">download</span><span class=\"p\">)</span> it from GitHub\n{: .download}\n\nLove this plugin? please consider <span class=\"p\">[</span><span class=\"nv\">buying me a cup of coffee</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>.\n{: .store}\n</code></pre></div></div>\n\n<h3 id=\"example\">Example</h3>\n\n<p class=\"download\"><a href=\"https://github.com/sparanoid/sparanoid.com/\">Download</a> it from GitHub</p>\n\n<p class=\"store\">Love this plugin? please consider buying me a cup of coffee.</p>\n\n<h2 id=\"largetype\"><code class=\"language-plaintext highlighter-rouge\">.largetype</code></h2>\n\n<p>Make normal paragraph text large enough.</p>\n\n<h3 id=\"usage-1\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">[</span><span class=\"nv\">PayPal</span><span class=\"p\">](</span><span class=\"sx\">donate</span><span class=\"p\">)</span>\n{: .largetype}\n</code></pre></div></div>\n\n<h3 id=\"example-1\">Example</h3>\n\n<p class=\"largetype\"><a href=\"https://sparanoid.com/donate/\">PayPal</a></p>\n\n<h2 id=\"browser\"><code class=\"language-plaintext highlighter-rouge\">.browser</code></h2>\n\n<p>A simple browser frame using pure CSS.</p>\n\n<h3 id=\"usage-2\">Usage</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n{: .browser}\n</code></pre></div></div>\n\n<h3 id=\"example-2\">Example</h3>\n\n<p class=\"browser\"><img src=\"https://s3.amazonaws.com/sparanoid/delicious.com.png\" alt=\"Delicious Preview\" class=\"no-lightense\" /></p>\n\n<h2 id=\"lightense-images\"><a href=\"https://sparanoid.com/work/lightense-images/\">Lightense Images</a></h2>\n\n<p>A simple library inspired by <a href=\"https://github.com/tholman\">Tim Holman</a> to view large images up close using simple mouse interaction, and the full screen.</p>\n\n<h3 id=\"usage-3\">Usage</h3>\n\n<p>Add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>plugin: lightense\n</code></pre></div></div>\n\n<p>Markdown markup:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/photo.jpg</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Lightense Images is activated globally by default, if you want to disable this effect for specific image, you can simply apply <code class=\"language-plaintext highlighter-rouge\">.no-lightense</code> CSS class to your image or <code class=\"language-plaintext highlighter-rouge\">&lt;img&gt;</code>:</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-lightense}\n</code></pre></div></div>\n\n<p>Please note that if you’re using HTML markup, you should wrap your images into a <code class=\"language-plaintext highlighter-rouge\">&lt;p&gt;</code> container.</p>\n\n<h3 id=\"example-3\">Example</h3>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/moonstruck-princess-ext-red.jpg\" alt=\"Moonstruck Princess Extended - Red\" /></p>\n\n<h2 id=\"image-sizes\">Image Sizes</h2>\n\n<p>There’re different size helpers for images. They’re available using the following CSS classes:</p>\n\n<h3 id=\"small-size\">Small Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-small}\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/moonstruck-princess-ext-orange.jpg\" alt=\"Moonstruck Princess Extended - orange\" class=\"size-small\" /></p>\n\n<h3 id=\"medium-size\">Medium Size</h3>\n\n<p>Medium size is the default size of images, so you don’t need additional CSS class for it.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/moonstruck-princess-ext-yellow.jpg\" alt=\"Moonstruck Princess Extended - Yellow\" /></p>\n\n<h3 id=\"large-size\">Large Size</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-large}\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/moonstruck-princess-ext-green.jpg\" alt=\"Moonstruck Princess Extended - Green\" class=\"size-large\" /></p>\n\n<h3 id=\"aligned-images\">Aligned Images</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-left}\n\n<span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .size-right}\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/moonstruck-princess-ext-blue.jpg\" alt=\"Moonstruck Princess Extended - Blue\" class=\"size-left\" /></p>\n\n<p>Aligned images are smaller images beside text, you can just apply <code class=\"language-plaintext highlighter-rouge\">.size-left</code> or <code class=\"language-plaintext highlighter-rouge\">.size-right</code> to your images and nothing special markup required. However that aligned images will be responded to normal large size for small desktops or mobile devices.</p>\n\n<h3 id=\"small-images\">Small Images</h3>\n\n<p>Useful for images smaller than container width.</p>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize}\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/who-can-run.png\" alt=\"Run?\" class=\"no-resize\" /></p>\n\n<h3 id=\"small-images-center\">Small Images (center)</h3>\n\n<div class=\"language-md highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">![</span><span class=\"nv\">Image</span><span class=\"p\">](</span><span class=\"sx\">https://sparanoid.com/logo.png</span><span class=\"p\">)</span>{: .no-resize.center}\n</code></pre></div></div>\n\n<p><img src=\"https://s3.amazonaws.com/sparanoid/who-can-run.png\" alt=\"Run?\" class=\"no-resize center\" /></p>",
      "excerpt": ".note, .store, and .download",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Custom Color Scheme",
      "permalink": "http://0.0.0.0:4321/custom-color-scheme.html",
      "link": "http://0.0.0.0:4321/custom-color-scheme.html",
      "date": "2014-05-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#0029ff\"\nscheme-link: \"#ff00b4\"\nscheme-hover: \"#ff00b4\"\nscheme-code: \"#ad00ff\"\nscheme-bg: \"#00ebff\"\nscheme-hero-text: \"#00ebff\"\nscheme-hero-link: \"#00ebff\"\nscheme-hero-bg: \"#0029ff\"\n</code></pre></div></div>\n\n<p>You can also ignore other variables if you only want to change the background:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-bg: \"#00ebff\"\n</code></pre></div></div>",
      "excerpt": "This is an example how to change your post color scheme for specific posts. You can simply add the following variables to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Unique Post Styling via Custom CSS",
      "permalink": "http://0.0.0.0:4321/custom-css.html",
      "link": "http://0.0.0.0:4321/custom-css.html",
      "date": "2014-04-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>This is an example how to change your post styling via CSS. You can simply add the <code class=\"language-plaintext highlighter-rouge\">css</code> option to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scheme-text: \"#000\"\nscheme-link: \"#a73300\"\nscheme-hover: \"#ff4e00\"\nscheme-code: \"#a73300\"\ncss: |\n  body {\n    background-image: linear-gradient(to bottom, #fff500, #ff8f00);\n  }\n</code></pre></div></div>\n\n<p>Please note that syntax highligting may look ugly with custom background color.</p>",
      "excerpt": "This is an example how to change your post styling via CSS. You can simply add the css option to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  

  
    ,
    {
      "title": "External Link Post",
      "permalink": "http://0.0.0.0:4321/external-link-post.html",
      "link": "http://0.0.0.0:4321/external-link-post.html",
      "date": "2014-02-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>This is an example of Tumblr-like external link post. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">link</span><span class=\"pi\">:</span> <span class=\"s\">https://sparanoid.com/</span>\n</code></pre></div></div>",
      "excerpt": "This is an example of Tumblr-like external link post. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Custom Heading Image",
      "permalink": "http://0.0.0.0:4321/custom-heading-image.html",
      "link": "http://0.0.0.0:4321/custom-heading-image.html",
      "date": "2014-02-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>This is an example of custom post heading image. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-img</span><span class=\"pi\">:</span> <span class=\"s\">svg/heading-image.svg</span>\n<span class=\"na\">heading-img-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-img-width</span><span class=\"pi\">:</span> <span class=\"m\">400</span>\n</code></pre></div></div>\n\n<blockquote>\n  <p>In Almace Scaffolding v1.1.0, the original <code class=\"language-plaintext highlighter-rouge\">svg-headline*</code>, and <code class=\"language-plaintext highlighter-rouge\">img-headline*</code> options are deprecated.</p>\n</blockquote>\n\n<dl>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img</code></dt>\n  <dd>Heading image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"language-plaintext highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"language-plaintext highlighter-rouge\">site.file</code>, you can set this option to <code class=\"language-plaintext highlighter-rouge\">true</code> to prefix it with <code class=\"language-plaintext highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"language-plaintext highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-img-width</code></dt>\n  <dd>Set the width of your heading image. The value will be converted to viewport unit automatically. ie. <code class=\"language-plaintext highlighter-rouge\">heading-img-width: 400</code> will be converted to <code class=\"language-plaintext highlighter-rouge\">width: 40vw</code>;</dd>\n</dl>\n\n<blockquote>\n  <p><strong>Pro Tips</strong>: Keep a <code class=\"language-plaintext highlighter-rouge\">&lt;title&gt;</code> tag for your SVG can help Safari generate correct post title for its Reader mode:</p>\n</blockquote>\n\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;svg</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/2000/svg\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;title&gt;</span>Cool Article<span class=\"nt\">&lt;/title&gt;</span>\n…\n</code></pre></div></div>",
      "excerpt": "This is an example of custom post heading image. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  

  
    ,
    {
      "title": "Custom Heading Background",
      "permalink": "http://0.0.0.0:4321/custom-heading-background.html",
      "link": "http://0.0.0.0:4321/custom-heading-background.html",
      "date": "2014-02-01T00:00:00+00:00",
      
        "modified": "2023-01-31T06:31:08+00:00",
      
      "author": {
        "name": "Karun Kalaivanan Vinayagam",
        "url": "http://vkarun.me/",
        "email": "mail@vkarun.me"
      },
      "content": "<p>This is an example of custom heading background. You can simply add the following setting to your post <a href=\"https://jekyllrb.com/docs/frontmatter/\">front-matter field</a>:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">heading-bg</span><span class=\"pi\">:</span> <span class=\"s\">img/heading-background.jpg</span>\n<span class=\"na\">heading-bg-local</span><span class=\"pi\">:</span> <span class=\"no\">true</span>\n<span class=\"na\">heading-bg-color</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#8141b1\"</span>\n<span class=\"na\">heading-bg-size</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">100px</span><span class=\"nv\"> </span><span class=\"s\">100px\"</span>\n<span class=\"na\">heading-bg-position</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">center</span><span class=\"nv\"> </span><span class=\"s\">bottom\"</span>\n<span class=\"na\">heading-bg-repeat</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">repeat\"</span>\n<span class=\"na\">heading-bg-text</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">#fff\"</span>\n</code></pre></div></div>\n\n<dl>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg</code></dt>\n  <dd>Background image filename, if a relative URL (non-external URL) is provided, the file will be prefixed with <code class=\"language-plaintext highlighter-rouge\">site.file</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-local</code></dt>\n  <dd>To avoid relative URL prefixed by <code class=\"language-plaintext highlighter-rouge\">site.file</code>, you can set this option to <code class=\"language-plaintext highlighter-rouge\">true</code> to prefix it with <code class=\"language-plaintext highlighter-rouge\">amsf_user_assets</code>, then you can store your images in <code class=\"language-plaintext highlighter-rouge\">_app/assets/</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-color</code></dt>\n  <dd>Background color, recommend setting its value matches your image color tone.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-size</code></dt>\n  <dd>Background size, default value is <code class=\"language-plaintext highlighter-rouge\">cover</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-position</code></dt>\n  <dd>Background position, default value is <code class=\"language-plaintext highlighter-rouge\">center center</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-repeat</code></dt>\n  <dd>Background repeat, default value is <code class=\"language-plaintext highlighter-rouge\">no-repeat</code>.</dd>\n  <dt><code class=\"language-plaintext highlighter-rouge\">heading-bg-text</code></dt>\n  <dd>Text color in heading, set it based on your background image.</dd>\n</dl>\n\n<blockquote>\n  <p>Heading image copyright info:\n© 士郎正宗・Production I.G／講談社・「攻殻機動隊」製作委員会</p>\n</blockquote>",
      "excerpt": "This is an example of custom heading background. You can simply add the following setting to your post front-matter field:",
      "languages": null,
      "categories": ["note"],
      "tags": ["curtana"]
    }
    
  


]
